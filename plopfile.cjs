module.exports = function (plop) {
  plop.setGenerator('component', {
    description: 'Cria um componente React com suporte a tema e i18n',
    prompts: [
      {
        type: 'input',
        name: 'name',
        message: 'Nome do componente',
      },
    ],
    actions: [
      {
        type: 'add',
        path: 'src/components/{{pascalCase name}}/{{pascalCase name}}.tsx',
        templateFile: 'plop-templates/component.tsx.hbs',
      },
      {
        type: 'add',
        path: 'src/components/{{pascalCase name}}/{{pascalCase name}}.test.tsx',
        templateFile: 'plop-templates/component.test.tsx.hbs',
      },
      {
        type: 'add',
        path: 'src/components/{{pascalCase name}}/{{pascalCase name}}.module.css',
        templateFile: 'plop-templates/component.module.css.hbs',
      },
      {
        type: 'add',
        path: 'src/locales/pt/{{camelCase name}}.json',
        template: `{
  "welcome": "Bem-vindo ao componente {{pascalCase name}}!",
  "description": "Este é um componente gerado pelo Plop."
}`,
      },
      {
        type: 'add',
        path: 'src/locales/en/{{camelCase name}}.json',
        template: `{
  "welcome": "Welcome to the {{pascalCase name}} component!",
  "description": "This is a component generated by Plop."
}`,
      },
    ],
  })

  plop.setGenerator('feature', {
    description:
      'Cria uma feature completa (API fake, store Zustand, componente Mantine, testes)',
    prompts: [
      {
        type: 'input',
        name: 'name',
        message: 'Nome da feature',
      },
    ],
    actions: [
      {
        type: 'add',
        path: 'src/features/{{camelCase name}}/api/{{camelCase name}}Api.ts',
        templateFile: 'plop-templates/feature/api.ts.hbs',
      },
      {
        type: 'add',
        path: 'src/features/{{camelCase name}}/store/use{{pascalCase name}}Store.ts',
        templateFile: 'plop-templates/feature/store.ts.hbs',
      },
      {
        type: 'add',
        path: 'src/features/{{camelCase name}}/components/{{pascalCase name}}.tsx',
        templateFile: 'plop-templates/feature/component.tsx.hbs',
      },
      {
        type: 'add',
        path: 'src/features/{{camelCase name}}/components/{{pascalCase name}}.test.tsx',
        templateFile: 'plop-templates/feature/component.test.tsx.hbs',
      },
      {
        type: 'add',
        path: 'src/features/{{camelCase name}}/components/{{pascalCase name}}.module.css',
        templateFile: 'plop-templates/feature/component.module.css.hbs',
      },
    ],
  })

  plop.setGenerator('cleanup', {
    description:
      'Limpa o boilerplate removendo exemplos e código desnecessário',
    prompts: [
      {
        type: 'confirm',
        name: 'confirm',
        message:
          'Tem certeza que deseja limpar o projeto? Essa ação é irreversível e removerá todos os componentes e páginas de exemplo.',
        default: false,
      },
    ],
    actions: (data) => {
      if (!data.confirm) {
        console.log('Limpeza cancelada pelo usuário.')
        return []
      }

      return [
        {
          type: 'remove',
          path: 'src/features',
        },
        {
          type: 'remove',
          path: 'src/pages/AboutPage.tsx',
        },
        {
          type: 'remove',
          path: 'src/features/greeter/components/Greeting.tsx',
        },
        {
          type: 'add',
          path: 'src/pages/HomePage.tsx',
          templateFile: 'plop-templates/cleanup/HomePage.tsx.hbs',
          force: true,
        },
        {
          type: 'modify',
          path: 'src/app/router.tsx',
          templateFile: 'plop-templates/cleanup/router.tsx.hbs',
        },
        {
          type: 'modify',
          path: 'src/App.tsx',
          templateFile: 'plop-templates/cleanup/App.tsx.hbs',
        },
        {
          type: 'modify',
          path: 'src/locales/en/common.json',
          templateFile: 'plop-templates/cleanup/en.common.json.hbs',
        },
        {
          type: 'modify',
          path: 'src/locales/pt/common.json',
          templateFile: 'plop-templates/cleanup/pt.common.json.hbs',
        },
      ]
    },
  })
}
